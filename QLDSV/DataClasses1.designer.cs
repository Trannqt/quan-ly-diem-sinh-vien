#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLDSV
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDSV")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertHOCPHAN(HOCPHAN instance);
    partial void UpdateHOCPHAN(HOCPHAN instance);
    partial void DeleteHOCPHAN(HOCPHAN instance);
    partial void InsertKETQUA(KETQUA instance);
    partial void UpdateKETQUA(KETQUA instance);
    partial void DeleteKETQUA(KETQUA instance);
    partial void InsertKHOA(KHOA instance);
    partial void UpdateKHOA(KHOA instance);
    partial void DeleteKHOA(KHOA instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertSINHVIEN(SINHVIEN instance);
    partial void UpdateSINHVIEN(SINHVIEN instance);
    partial void DeleteSINHVIEN(SINHVIEN instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::QLDSV.Properties.Settings.Default.QLDSVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<HOCPHAN> HOCPHANs
		{
			get
			{
				return this.GetTable<HOCPHAN>();
			}
		}
		
		public System.Data.Linq.Table<KETQUA> KETQUAs
		{
			get
			{
				return this.GetTable<KETQUA>();
			}
		}
		
		public System.Data.Linq.Table<KHOA> KHOAs
		{
			get
			{
				return this.GetTable<KHOA>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<SINHVIEN> SINHVIENs
		{
			get
			{
				return this.GetTable<SINHVIEN>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCPHAN")]
	public partial class HOCPHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHP;
		
		private string _TENHP;
		
		private int _TINCHI;
		
		private System.Nullable<int> _HOCKY;
		
		private string _MAKHOA;
		
		private System.Nullable<int> _PHANTRAMQT;
		
		private EntitySet<KETQUA> _KETQUAs;
		
		private EntityRef<KHOA> _KHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHPChanging(string value);
    partial void OnMAHPChanged();
    partial void OnTENHPChanging(string value);
    partial void OnTENHPChanged();
    partial void OnTINCHIChanging(int value);
    partial void OnTINCHIChanged();
    partial void OnHOCKYChanging(System.Nullable<int> value);
    partial void OnHOCKYChanged();
    partial void OnMAKHOAChanging(string value);
    partial void OnMAKHOAChanged();
    partial void OnPHANTRAMQTChanging(System.Nullable<int> value);
    partial void OnPHANTRAMQTChanged();
    #endregion
		
		public HOCPHAN()
		{
			this._KETQUAs = new EntitySet<KETQUA>(new Action<KETQUA>(this.attach_KETQUAs), new Action<KETQUA>(this.detach_KETQUAs));
			this._KHOA = default(EntityRef<KHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHP", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHP
		{
			get
			{
				return this._MAHP;
			}
			set
			{
				if ((this._MAHP != value))
				{
					this.OnMAHPChanging(value);
					this.SendPropertyChanging();
					this._MAHP = value;
					this.SendPropertyChanged("MAHP");
					this.OnMAHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHP", DbType="NVarChar(100)")]
		public string TENHP
		{
			get
			{
				return this._TENHP;
			}
			set
			{
				if ((this._TENHP != value))
				{
					this.OnTENHPChanging(value);
					this.SendPropertyChanging();
					this._TENHP = value;
					this.SendPropertyChanged("TENHP");
					this.OnTENHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINCHI", DbType="Int NOT NULL")]
		public int TINCHI
		{
			get
			{
				return this._TINCHI;
			}
			set
			{
				if ((this._TINCHI != value))
				{
					this.OnTINCHIChanging(value);
					this.SendPropertyChanging();
					this._TINCHI = value;
					this.SendPropertyChanged("TINCHI");
					this.OnTINCHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOCKY", DbType="Int")]
		public System.Nullable<int> HOCKY
		{
			get
			{
				return this._HOCKY;
			}
			set
			{
				if ((this._HOCKY != value))
				{
					this.OnHOCKYChanging(value);
					this.SendPropertyChanging();
					this._HOCKY = value;
					this.SendPropertyChanged("HOCKY");
					this.OnHOCKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOA", DbType="VarChar(100)")]
		public string MAKHOA
		{
			get
			{
				return this._MAKHOA;
			}
			set
			{
				if ((this._MAKHOA != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHOAChanging(value);
					this.SendPropertyChanging();
					this._MAKHOA = value;
					this.SendPropertyChanged("MAKHOA");
					this.OnMAKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHANTRAMQT", DbType="Int")]
		public System.Nullable<int> PHANTRAMQT
		{
			get
			{
				return this._PHANTRAMQT;
			}
			set
			{
				if ((this._PHANTRAMQT != value))
				{
					this.OnPHANTRAMQTChanging(value);
					this.SendPropertyChanging();
					this._PHANTRAMQT = value;
					this.SendPropertyChanged("PHANTRAMQT");
					this.OnPHANTRAMQTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCPHAN_KETQUA", Storage="_KETQUAs", ThisKey="MAHP", OtherKey="MAHP")]
		public EntitySet<KETQUA> KETQUAs
		{
			get
			{
				return this._KETQUAs;
			}
			set
			{
				this._KETQUAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_HOCPHAN", Storage="_KHOA", ThisKey="MAKHOA", OtherKey="MAKHOA", IsForeignKey=true, DeleteRule="CASCADE")]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.HOCPHANs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.HOCPHANs.Add(this);
						this._MAKHOA = value.MAKHOA;
					}
					else
					{
						this._MAKHOA = default(string);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.HOCPHAN = this;
		}
		
		private void detach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.HOCPHAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KETQUA")]
	public partial class KETQUA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASV;
		
		private string _MAHP;
		
		private double _DIEMQT;
		
		private double _DIEMTHI;
		
		private double _DIEMTK;
		
		private System.Nullable<bool> _KQ;
		
		private EntityRef<HOCPHAN> _HOCPHAN;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASVChanging(string value);
    partial void OnMASVChanged();
    partial void OnMAHPChanging(string value);
    partial void OnMAHPChanged();
    partial void OnDIEMQTChanging(double value);
    partial void OnDIEMQTChanged();
    partial void OnDIEMTHIChanging(double value);
    partial void OnDIEMTHIChanged();
    partial void OnDIEMTKChanging(double value);
    partial void OnDIEMTKChanged();
    partial void OnKQChanging(System.Nullable<bool> value);
    partial void OnKQChanged();
    #endregion
		
		public KETQUA()
		{
			this._HOCPHAN = default(EntityRef<HOCPHAN>);
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASV", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASV
		{
			get
			{
				return this._MASV;
			}
			set
			{
				if ((this._MASV != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASVChanging(value);
					this.SendPropertyChanging();
					this._MASV = value;
					this.SendPropertyChanged("MASV");
					this.OnMASVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHP", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHP
		{
			get
			{
				return this._MAHP;
			}
			set
			{
				if ((this._MAHP != value))
				{
					if (this._HOCPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHPChanging(value);
					this.SendPropertyChanging();
					this._MAHP = value;
					this.SendPropertyChanged("MAHP");
					this.OnMAHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMQT", DbType="Float NOT NULL")]
		public double DIEMQT
		{
			get
			{
				return this._DIEMQT;
			}
			set
			{
				if ((this._DIEMQT != value))
				{
					this.OnDIEMQTChanging(value);
					this.SendPropertyChanging();
					this._DIEMQT = value;
					this.SendPropertyChanged("DIEMQT");
					this.OnDIEMQTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMTHI", DbType="Float NOT NULL")]
		public double DIEMTHI
		{
			get
			{
				return this._DIEMTHI;
			}
			set
			{
				if ((this._DIEMTHI != value))
				{
					this.OnDIEMTHIChanging(value);
					this.SendPropertyChanging();
					this._DIEMTHI = value;
					this.SendPropertyChanged("DIEMTHI");
					this.OnDIEMTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMTK", DbType="Float NOT NULL")]
		public double DIEMTK
		{
			get
			{
				return this._DIEMTK;
			}
			set
			{
				if ((this._DIEMTK != value))
				{
					this.OnDIEMTKChanging(value);
					this.SendPropertyChanging();
					this._DIEMTK = value;
					this.SendPropertyChanged("DIEMTK");
					this.OnDIEMTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KQ", DbType="Bit")]
		public System.Nullable<bool> KQ
		{
			get
			{
				return this._KQ;
			}
			set
			{
				if ((this._KQ != value))
				{
					this.OnKQChanging(value);
					this.SendPropertyChanging();
					this._KQ = value;
					this.SendPropertyChanged("KQ");
					this.OnKQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCPHAN_KETQUA", Storage="_HOCPHAN", ThisKey="MAHP", OtherKey="MAHP", IsForeignKey=true)]
		public HOCPHAN HOCPHAN
		{
			get
			{
				return this._HOCPHAN.Entity;
			}
			set
			{
				HOCPHAN previousValue = this._HOCPHAN.Entity;
				if (((previousValue != value) 
							|| (this._HOCPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCPHAN.Entity = null;
						previousValue.KETQUAs.Remove(this);
					}
					this._HOCPHAN.Entity = value;
					if ((value != null))
					{
						value.KETQUAs.Add(this);
						this._MAHP = value.MAHP;
					}
					else
					{
						this._MAHP = default(string);
					}
					this.SendPropertyChanged("HOCPHAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_KETQUA", Storage="_SINHVIEN", ThisKey="MASV", OtherKey="MASV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.KETQUAs.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.KETQUAs.Add(this);
						this._MASV = value.MASV;
					}
					else
					{
						this._MASV = default(string);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOA")]
	public partial class KHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHOA;
		
		private string _TENKHOA;
		
		private System.Nullable<int> _NAMTHANHLAP;
		
		private EntitySet<HOCPHAN> _HOCPHANs;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHOAChanging(string value);
    partial void OnMAKHOAChanged();
    partial void OnTENKHOAChanging(string value);
    partial void OnTENKHOAChanged();
    partial void OnNAMTHANHLAPChanging(System.Nullable<int> value);
    partial void OnNAMTHANHLAPChanged();
    #endregion
		
		public KHOA()
		{
			this._HOCPHANs = new EntitySet<HOCPHAN>(new Action<HOCPHAN>(this.attach_HOCPHANs), new Action<HOCPHAN>(this.detach_HOCPHANs));
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOA", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKHOA
		{
			get
			{
				return this._MAKHOA;
			}
			set
			{
				if ((this._MAKHOA != value))
				{
					this.OnMAKHOAChanging(value);
					this.SendPropertyChanging();
					this._MAKHOA = value;
					this.SendPropertyChanged("MAKHOA");
					this.OnMAKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHOA", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENKHOA
		{
			get
			{
				return this._TENKHOA;
			}
			set
			{
				if ((this._TENKHOA != value))
				{
					this.OnTENKHOAChanging(value);
					this.SendPropertyChanging();
					this._TENKHOA = value;
					this.SendPropertyChanged("TENKHOA");
					this.OnTENKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMTHANHLAP", DbType="Int")]
		public System.Nullable<int> NAMTHANHLAP
		{
			get
			{
				return this._NAMTHANHLAP;
			}
			set
			{
				if ((this._NAMTHANHLAP != value))
				{
					this.OnNAMTHANHLAPChanging(value);
					this.SendPropertyChanging();
					this._NAMTHANHLAP = value;
					this.SendPropertyChanged("NAMTHANHLAP");
					this.OnNAMTHANHLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_HOCPHAN", Storage="_HOCPHANs", ThisKey="MAKHOA", OtherKey="MAKHOA")]
		public EntitySet<HOCPHAN> HOCPHANs
		{
			get
			{
				return this._HOCPHANs;
			}
			set
			{
				this._HOCPHANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_LOP", Storage="_LOPs", ThisKey="MAKHOA", OtherKey="MAKHOA")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCPHANs(HOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_HOCPHANs(HOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOP;
		
		private string _TENLOP;
		
		private System.Nullable<int> _SISO;
		
		private string _MAKHOA;
		
		private EntitySet<SINHVIEN> _SINHVIENs;
		
		private EntityRef<KHOA> _KHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    partial void OnTENLOPChanging(string value);
    partial void OnTENLOPChanged();
    partial void OnSISOChanging(System.Nullable<int> value);
    partial void OnSISOChanged();
    partial void OnMAKHOAChanging(string value);
    partial void OnMAKHOAChanged();
    #endregion
		
		public LOP()
		{
			this._SINHVIENs = new EntitySet<SINHVIEN>(new Action<SINHVIEN>(this.attach_SINHVIENs), new Action<SINHVIEN>(this.detach_SINHVIENs));
			this._KHOA = default(EntityRef<KHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOP", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENLOP
		{
			get
			{
				return this._TENLOP;
			}
			set
			{
				if ((this._TENLOP != value))
				{
					this.OnTENLOPChanging(value);
					this.SendPropertyChanging();
					this._TENLOP = value;
					this.SendPropertyChanged("TENLOP");
					this.OnTENLOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SISO", DbType="Int")]
		public System.Nullable<int> SISO
		{
			get
			{
				return this._SISO;
			}
			set
			{
				if ((this._SISO != value))
				{
					this.OnSISOChanging(value);
					this.SendPropertyChanging();
					this._SISO = value;
					this.SendPropertyChanged("SISO");
					this.OnSISOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOA", DbType="VarChar(100)")]
		public string MAKHOA
		{
			get
			{
				return this._MAKHOA;
			}
			set
			{
				if ((this._MAKHOA != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHOAChanging(value);
					this.SendPropertyChanging();
					this._MAKHOA = value;
					this.SendPropertyChanged("MAKHOA");
					this.OnMAKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SINHVIEN", Storage="_SINHVIENs", ThisKey="MALOP", OtherKey="MALOP")]
		public EntitySet<SINHVIEN> SINHVIENs
		{
			get
			{
				return this._SINHVIENs;
			}
			set
			{
				this._SINHVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_LOP", Storage="_KHOA", ThisKey="MAKHOA", OtherKey="MAKHOA", IsForeignKey=true, DeleteRule="CASCADE")]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MAKHOA = value.MAKHOA;
					}
					else
					{
						this._MAKHOA = default(string);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SINHVIEN")]
	public partial class SINHVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASV;
		
		private string _HOTEN;
		
		private System.DateTime _NGAYSINH;
		
		private string _GIOITINH;
		
		private string _DIACHI;
		
		private string _MALOP;
		
		private EntitySet<KETQUA> _KETQUAs;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASVChanging(string value);
    partial void OnMASVChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGAYSINHChanging(System.DateTime value);
    partial void OnNGAYSINHChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    #endregion
		
		public SINHVIEN()
		{
			this._KETQUAs = new EntitySet<KETQUA>(new Action<KETQUA>(this.attach_KETQUAs), new Action<KETQUA>(this.detach_KETQUAs));
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASV", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASV
		{
			get
			{
				return this._MASV;
			}
			set
			{
				if ((this._MASV != value))
				{
					this.OnMASVChanging(value);
					this.SendPropertyChanging();
					this._MASV = value;
					this.SendPropertyChanged("MASV");
					this.OnMASVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="VarChar(100)")]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_KETQUA", Storage="_KETQUAs", ThisKey="MASV", OtherKey="MASV")]
		public EntitySet<KETQUA> KETQUAs
		{
			get
			{
				return this._KETQUAs;
			}
			set
			{
				this._KETQUAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SINHVIEN", Storage="_LOP", ThisKey="MALOP", OtherKey="MALOP", IsForeignKey=true, DeleteRule="CASCADE")]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.SINHVIENs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.SINHVIENs.Add(this);
						this._MALOP = value.MALOP;
					}
					else
					{
						this._MALOP = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenTN;
		
		private string _Pass;
		
		private System.Nullable<int> _rights;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenTNChanging(string value);
    partial void OnTenTNChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnrightsChanging(System.Nullable<int> value);
    partial void OnrightsChanged();
    #endregion
		
		public TAIKHOAN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTN", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenTN
		{
			get
			{
				return this._TenTN;
			}
			set
			{
				if ((this._TenTN != value))
				{
					this.OnTenTNChanging(value);
					this.SendPropertyChanging();
					this._TenTN = value;
					this.SendPropertyChanged("TenTN");
					this.OnTenTNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="NVarChar(100)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rights", DbType="Int")]
		public System.Nullable<int> rights
		{
			get
			{
				return this._rights;
			}
			set
			{
				if ((this._rights != value))
				{
					this.OnrightsChanging(value);
					this.SendPropertyChanging();
					this._rights = value;
					this.SendPropertyChanged("rights");
					this.OnrightsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
